"""Initial migration

Revision ID: c68344595537
Revises: 
Create Date: 2025-08-06 15:26:53.708252

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c68344595537'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('student_id')
    )
    op.create_index(op.f('ix_students_email'), 'students', ['email'], unique=True)
    op.create_index(op.f('ix_students_student_id'), 'students', ['student_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('submissions',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_index(op.f('ix_submissions_submission_id'), 'submissions', ['submission_id'], unique=False)
    op.create_table('analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('analyzer_name', sa.String(), nullable=False),
    sa.Column('result_json', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_results_id'), 'analysis_results', ['id'], unique=False)
    op.create_table('anomaly_flags',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('is_anomaly', sa.Boolean(), nullable=True),
    sa.Column('sentence_length_diff', sa.Float(), nullable=True),
    sa.Column('tone_similarity', sa.Float(), nullable=True),
    sa.Column('formality_diff', sa.Float(), nullable=True),
    sa.Column('anomaly_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('grammar_errors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('error_type', sa.String(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('sentence', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grammar_errors_id'), 'grammar_errors', ['id'], unique=False)
    op.create_table('hedging_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('hedging_count', sa.Integer(), nullable=True),
    sa.Column('hedging_density', sa.Float(), nullable=True),
    sa.Column('hedging_style', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('lexical_diversity_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('ttr', sa.Float(), nullable=True),
    sa.Column('mtld', sa.Float(), nullable=True),
    sa.Column('hdd', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('lexical_richness_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('avg_zipf_score', sa.Float(), nullable=True),
    sa.Column('percent_rare_words', sa.Float(), nullable=True),
    sa.Column('num_advanced_words', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('passive_voice_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('passive_sentence_ratio', sa.Float(), nullable=True),
    sa.Column('passive_count', sa.Integer(), nullable=True),
    sa.Column('total_sentences', sa.Integer(), nullable=True),
    sa.Column('passive_style', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('readability_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('flesch_kincaid_grade', sa.Float(), nullable=True),
    sa.Column('smog_index', sa.Float(), nullable=True),
    sa.Column('gunning_fog', sa.Float(), nullable=True),
    sa.Column('dale_chall_score', sa.Float(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('sentence_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('sentiment_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('polarity', sa.Float(), nullable=True),
    sa.Column('subjectivity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('style_metrics',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('formality_score', sa.Float(), nullable=True),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('avg_sentence_length', sa.Float(), nullable=True),
    sa.Column('lexical_density', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    op.create_table('tone_scores',
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('top_emotion', sa.String(length=50), nullable=True),
    sa.Column('top_emotion_score', sa.Float(), nullable=True),
    sa.Column('secondary_tone', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.submission_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tone_scores')
    op.drop_table('style_metrics')
    op.drop_table('sentiment_scores')
    op.drop_table('readability_scores')
    op.drop_table('passive_voice_scores')
    op.drop_table('lexical_richness_scores')
    op.drop_table('lexical_diversity_scores')
    op.drop_table('hedging_scores')
    op.drop_index(op.f('ix_grammar_errors_id'), table_name='grammar_errors')
    op.drop_table('grammar_errors')
    op.drop_table('anomaly_flags')
    op.drop_index(op.f('ix_analysis_results_id'), table_name='analysis_results')
    op.drop_table('analysis_results')
    op.drop_index(op.f('ix_submissions_submission_id'), table_name='submissions')
    op.drop_table('submissions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_students_student_id'), table_name='students')
    op.drop_index(op.f('ix_students_email'), table_name='students')
    op.drop_table('students')
    # ### end Alembic commands ###
